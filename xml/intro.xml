<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha.vim.intro">
 <title>Making &vi; Comfortable</title>
 <para>&vi; Cheat Sheet</para>
 <screen>
Basic editing
-------------
i - insert before a character
a - append after a character
o - insert new line below
I - insert at the line start
A - append at the line end
O - insert a new line above

Moving around
-------------
w - beginning of the next word
b - beginning of the previous word
e - end of the next word
$ - end of the line
^ - first non-blank character of the line
0 - beginning of the line
fx - search the next 'x' character in the line, stops at the character
Fy - search the previous 'y' -||- 
tx - search the next 'x' character in the line, stops before the character
Ty - search the next 'y' character in the line, stops after the character
; - repeat the last f or F or t or T command
, - -||- in the other direction
% - moves to the matching parenthesis
gg - beginning of the document
nG - go to the line number n
G - go to the end of the document
n% - go to the n percent of the document
H - go to the first line of the screen
M - go to the middle of the screen
L - go to the last line of the screen

Scrolling around
----------------
CTRL-U - scroll 1/2 screen up
CTRL-D - scroll 1/2 screen down
CTRL-E - scroll one line up
CTRL-Y - scroll one line down
CTRL-F - scroll one screen forward
CTRL-B - scroll one screen backward
zt - moves the current line to the top of the screen
zb - moves the current line to the bottom of the screen
zz - moves the current line to the center of the screen
:set scrolloff=n - leaves the context of n lines around the current line

Getting oriented
----------------
CTRL-G - shows details about where you are in which file
:set number - shows line numbers
:set ruler - shows status line
 </screen>
 <sect1 xml:id="vim.intro.vimrc">
  <title>Useful &vi; Settings</title>

  <para>
   &vi; stores its settings in &vimrc;. Here are the ones that I generally
   find useful. Note that lines starting with <literal>"</literal> are
   comments.
  </para>

  <tip>
   <para>
    After you make changes to &vimrc;, you can apply them without restarting
    the &vi; session with <command>:source ~/.vimrc</command>
   </para>
  </tip>

<screen>" break compatibility with the ancient vi
set nocompatible
" set autorecognition of file types
filetype on
filetype plugin on
filetype indent on
" syntax highlighting, of course
syntax on
" smart context sensitive indenting
set smartindent
" show the info status bar at the bottom
set ruler
" show line numbers
set number</screen>

  <para>
   If you use tabs to edit several files at once, it is handy to map the
   following shortcuts to switch between them.
  </para>

<screen>" switch the tabs with SHIFT + &lt; or &gt;
map &lt;S-Right&gt; :tabnext&lt;CR&gt;
map &lt;S-Left&gt; :tabprevious&lt;CR&gt;</screen>
 </sect1>
 <sect1 xml:id="vim.intro.plugins">
  <title>&vi; Plug-ins</title>

  <para>
   Although &vi; is a full featured editing environment in its core
   installation, you will probably want to extend its functionality after
   some time. Either to do specific tasks more easily, or to teach it brand
   new features. And this is where &vi; plug-ins take part.
  </para>

  <para>
   There are thousands of &vi; plugins available online. A good place to
   start searching around is for example
   <link xlink:href="http://vimawesome.com"/>. There you can filter the list
   of viewed plug-ins by categories and tags. Installation instructions are
   presented for each plugin as well.
  </para>

  <para>
   Manual installation of plug-ins seems to be a thing of the past. To ease
   the plug-in management, it is better to install just one of them - a
   <emphasis>plug-in manager</emphasis>. There are several plug-in managers,
   some of which even take care of parallel plugin installation and online
   updating. The most popular are vim-plug, Vundle, or NeoBundle.
  </para>
 </sect1>
</chapter>
